services:
  gateway:
    # Reverse proxy
    image: "caddy:2"
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - MAPBOARD_API_ADDRESS
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
  database:
    image: ${POSTGRES_IMAGE:-postgis/postgis:15-3.4}
    restart: unless-stopped
    environment:
      - POSTGRES_USER
      - POSTGRES_DB
      # This allows connections without a password, which is expedient but insecure...
      - POSTGRES_PASSWORD
      - PGUSER=${POSTGRES_USER}
      - PGPASSWORD=${POSTGRES_PASSWORD}
      - PGPORT=5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "${MAPBOARD_DB_PORT:-54398}:5432"
    expose:
      - 5432
    volumes:
      - db_cluster:/var/lib/postgresql/data
  postgrest:
    image: "postgrest/postgrest:latest"
    restart: unless-stopped
    environment:
      - PGRST_DB_URI=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/${POSTGRES_DB}
      - PGRST_DB_SCHEMA=mapboard_api
      - PGRST_DB_ANON_ROLE=web_anon
  mapboard_server:
    build: ${MAPBOARD_SERVER_SRC_DIR}
    image: mapboard-server
    restart: unless-stopped
    profiles:
      - production
    environment:
      - MAPBOARD_DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/${POSTGRES_DB}
      - LOG_LEVEL=info
  # topology_manager:
  #   build: ../topology-manager
  #   command: ["echo", "Hello, world!"]
  # The broker and worker containers create an architecture
  # for running import and processing tasks on a separate thread
  # from the web server. These only run in "worker" profile.
  #  broker:
  #    profiles:
  #      - production
  #    image: redis:latest
volumes:
  db_cluster:

